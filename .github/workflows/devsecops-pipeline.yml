name: DevSecOps Pipeline for React.js Frontend

on:
  push:
    branches: dev
  pull_request:
    branches: dev

jobs:
  run-tests:
    name: Run Smoke Test and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies (including missing peer deps)
        run: |
          npm install --legacy-peer-deps --force
          npm install --save-dev @testing-library/react @testing-library/dom

      - name: Smoke Test (unit tests)
        run: npm test -- --watchAll=false --passWithNoTests

      - name: Lint Check
        run: npm run lint || true

  docker-build-and-test:
    name: Docker Build, Smoke, and Scuba Test
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t react-app:${{ github.sha }} .

      - name: Run container for smoke test
        run: |
          docker run -d -p 3000:80 --name testcontainer react-app:${{ github.sha }}
          sleep 10
          curl -f http://localhost:3000 || (docker logs testcontainer && exit 1)

      - name: SCUBA Test (placeholder)
        run: |
          # Replace this with your actual SCUBA test command(s)
          echo "Running SCUBA tests..."
          # Example: curl -f http://localhost:3000/health || (docker logs testcontainer && exit 1)

      - name: Clean up container
        if: always()
        run: |
          docker stop testcontainer || true
          docker rm testcontainer || true

  docker-push:
    name: Push Docker Image to Docker Hub
    runs-on: ubuntu-latest
    needs: docker-build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/react-app:${{ github.sha }} .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/react-app:${{ github.sha }}
