name: DevSecOps Pipeline for React.js Frontend

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  setup-environment:
    name: Setup Node.js Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

  run-tests:
    name: Run Smoke and Security Tests
    runs-on: ubuntu-latest
    needs: setup-environment
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Run Smoke Tests
        run: npm test -- --watchAll=false

      - name: Run ESLint for Static Code Analysis
        run: npm run lint

      - name: Install and Run OWASP Dependency-Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.0.3/dependency-check-7.0.3-release.zip
          unzip dependency-check-7.0.3-release.zip -d dc
          dc/dependency-check/bin/dependency-check.sh --project react-app --scan . --format HTML --out reports
      - name: Upload OWASP Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports/

  build-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build React App
        run: npm run build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/react-app:latest .

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/react-app:latest

  deploy:
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - name: Pull and Run Docker Image
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/react-app:latest
          docker run -d -p 80:80 ${{ secrets.DOCKER_USERNAME }}/react-app:latest
