name: DevSecOps Pipeline for React.js Frontend

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        run: npm install --legacy-peer-deps --force

      - name: Run Smoke Tests
        run: npm test -- --watchAll=false

      - name: Lint Code
        run: npm run lint

      - name: OWASP Dependency Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.0.3/dependency-check-7.0.3-release.zip
          unzip dependency-check-7.0.3-release.zip
          cd dependency-check-7.0.3
          ./bin/dependency-check.sh --project react-app --scan ../

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/react-app:${{ github.sha }} .

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/react-app:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    steps:
      - name: Deploy Docker Container
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/react-app:${{ github.sha }}
          docker run -d -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/react-app:${{ github.sha }}
